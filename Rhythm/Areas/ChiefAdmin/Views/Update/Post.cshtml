@model Rhythm.Areas.ChiefAdmin.Models.PostViewModel

@{
    Layout = "~/Areas/ChiefAdmin/Views/Shared/_Layout.cshtml";
}
<br /><br /><br />
<h2 class="align-center font-alt uppercase">Change Post</h2>
<!-- Section -->
<section class="page-section">
    <div class="container relative">

        <!-- Form -->
        @using (Html.BeginForm("Post", "Update", FormMethod.Post, new { @role = "form", @class = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.PostedOn)
            @Html.HiddenFor(m => m.ImageMime)
            @Html.HiddenFor(m => m.ImageData)
            @Html.HiddenFor(m => m.CountComments)
            @Html.Label("Name: ", new { @for = "exampleInputFile" })
            <div class="mb-20 mb-md-10">
                <!-- Name -->
                @Html.TextBoxFor(m => m.NameSenderPost, new { @name = "Name", @id = "Name", @class = "input-md form-control", @placeholder = "Name" })
            </div>

            @Html.Label("Title: ", new { @for = "exampleInputFile" })
            <div class="mb-20 mb-md-10">
                <!-- Title -->
                @Html.TextBoxFor(m => m.Title, new { @name = "Title", @id = "Title", @class = "input-md form-control", @placeholder = "Title" })
            </div>

            @Html.Label("Short Description: ", new { @for = "exampleInputFile" })
            <div class="mb-20 mb-md-10">
                @Html.TextAreaFor(m => m.ShortDescription, new { @name = "ShortDescription", @id = "ShortDescription", @class = "input-md round form-control", @style = "height: 84px;", @placeholder = "Short Description" })
            </div>

            @Html.Label("Post: ", new { @for = "exampleInputFile" })
            <div class="mb-20 mb-md-10">
                @Html.TextAreaFor(m => m.DescriptionPost, new { @name = "PostDescription", @id = "PostDescription", @class = "input-md round form-control", @style = "height: 84px;", @placeholder = "Post" })
            </div>

            @Html.Label("Url Slug: ", new { @for = "exampleInputFile" })
            <div class="mb-20 mb-md-10">
                <!-- URL -->
                @Html.TextBoxFor(m => m.UrlSlug, new { @name = "UrlSlug", @id = "UrlSlug", @class = "input-md form-control", @placeholder = "Url Slug" })
            </div>
            @Html.Label("Published?: ", new { @for = "exampleInputFile" })
            <div class="mb-20 mb-md-10">
                <label class="checkbox-inline">
                    @Html.CheckBoxFor(m => m.Published)
                </label>
            </div>

            @Html.Label("Choose Category: ", new { @for = "exampleInputFile" })
            <div class="mb-20 mb-md-10">
                @Html.DropDownList("Category")
            </div>
            <div class="mb-20 mb-md-10">
                @Html.Label("Choose Tags: ", new { @for = "exampleInputFile" })
                <table>
                    <tr>
                        @{
                            List<Rhythm.Areas.ChiefAdmin.Models.TagViewModel> tags = ViewBag.Tag;

                            foreach (var tag in tags)
                            {
                                <td>
                                    <input type="checkbox"
                                           name="selectedTag"
                                           value="@tag.ID"
                                           @(Html.Raw(tag.Assigned ? "checked=\"checked\"" : "")) />
                                </td>
                                <td>
                                    <div><a>&nbsp;</a> - @tag.Name <a>&nbsp;</a></div>
                                </td>
                            }
                        }
                    </tr>
                </table>
            </div>
            @Html.LabelFor(m => m.ImageMime, new { @for = "exampleInputFile" })
                            <div class="mb-20 mb-md-10">
                                @if (Model.ImageData != null)
                                {
                                    <img width="500" height="250" src="@Url.Action("GetImage", "Home", new { id = Model.ID })" />
                                }
                            </div>
                            <div class="clearfix">
                                <div class="cf-left-col">
                                    <!-- Inform Tip -->
                                    <div class="form-tip pt-20">
                                        <i class="fa fa-info-circle"></i> All the fields are required
                                    </div>
                                </div>
                                <div class="cf-right-col">
                                    <!-- Send Button -->
                                    <div class="align-right pt-10">
                                        <button type="submit" class="submit_btn btn btn-mod btn-medium btn-round" id="submit_btn">Save Post</button>
                                    </div>
                                </div>
                            </div>
                            }
    </div>
</section>

<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<script type="text/javascript">
    var editor = CKEDITOR.instances['DescriptionPost'];
    if (editor) { editor.destroy(true); }
    CKEDITOR.replace('DescriptionPost', { enterMode: CKEDITOR.ENTER_BR, });
</script>

<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<script type="text/javascript">
    var editor = CKEDITOR.instances['ShortDescription'];
    if (editor) { editor.destroy(true); }
    CKEDITOR.replace('ShortDescription', { enterMode: CKEDITOR.ENTER_BR, });
</script>