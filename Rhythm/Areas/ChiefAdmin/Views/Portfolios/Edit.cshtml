@model Rhythm.Areas.ChiefAdmin.Models.PortfolioViewModel

@{
    Layout = "~/Areas/ChiefAdmin/Views/Shared/_Layout.cshtml";
}
<h2 class="align-center font-alt uppercase">
    Edit Portfolio
</h2>
<section class="page-section">
    <div class="container relative">
        <h2>Edit Portfolio</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Portfolio</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PortfolioID)

                <div class="form-group">
                    @Html.LabelFor(model => model.NamePortfolio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.NamePortfolio, new { htmlAttributes = new { @class = "input-md form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Summary, new { htmlAttributes = new { @class = "input-md form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Skills, new { htmlAttributes = new { @class = "input-md form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WorkExp, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.WorkExp, new { htmlAttributes = new { @class = "input-md form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MyProjects, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.MyProjects, new { htmlAttributes = new { @class = "input-md form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Education, new { htmlAttributes = new { @class = "input-md form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AdditionalInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.AdditionalInfo, new { htmlAttributes = new { @class = "input-md form-control" } })
                    </div>
                </div>

                <div class="clearfix">
                    <div class="cf-left-col">
                        <!-- Inform Tip -->
                        <div class="form-tip pt-20">
                            <i class="fa fa-info-circle"></i> All the fields are required
                        </div>
                    </div>
                    <div class="cf-right-col">
                        <!-- Send Button -->
                        <div class="align-right pt-10">
                            <button type="submit" class="submit_btn btn btn-mod btn-medium btn-round" id="submit_btn">Save Portfolio</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        <div>
            <a href="@Url.Action("Index", "Portfolios")" class="submit_btn btn btn-mod btn-medium btn-round" id="submit_btn"> Back to List </a>
        </div>
    </div>
</section>


@section scripts {
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        var editor = CKEDITOR.instances['Summary'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('Summary', { enterMode: CKEDITOR.ENTER_BR, });
    </script>

    <script>
        var editor = CKEDITOR.instances['Skills'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('Skills', { enterMode: CKEDITOR.ENTER_BR, });
    </script>

    <script>
        var editor = CKEDITOR.instances['WorkExp'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('WorkExp', { enterMode: CKEDITOR.ENTER_BR, });
    </script>

    <script>
        var editor = CKEDITOR.instances['MyProjects'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('MyProjects', { enterMode: CKEDITOR.ENTER_BR, });
    </script>

    <script>
        var editor = CKEDITOR.instances['Education'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('Education', { enterMode: CKEDITOR.ENTER_BR, });
    </script>

    <script>
        var editor = CKEDITOR.instances['AdditionalInfo'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('AdditionalInfo', { enterMode: CKEDITOR.ENTER_BR, });
    </script>
}